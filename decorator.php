<?php
/**
 * Created by PhpStorm.
 * User: dusc
 * Date: 2017/7/28
 * Time: 13:35
 * 装饰器模式  结构型模式
 */

interface Shape{
    public function draw();
}
/*
 * 创建接口的实体类
 * */
class Rectangle implements Shape{
    public function draw()
    {
        // TODO: Implement draw() method.
       echo "Shape:Rectangle<br>";
    }
}

class Circle implements Shape{
    public function draw()
    {
        // TODO: Implement draw() method.
      echo "Shape:Circle<br>";
    }
}
/*
 * 创建 Shape 接口的抽象装饰类
 * */

abstract class ShapeDecorator implements Shape{
    protected $decoratedShape;

    function __construct($decorateShape)
    {
       $this->decoratedShape = $decorateShape;
    }

    public function draw()
    {
        // TODO: Implement draw() method.
        $this->decoratedShape->draw();
    }
}


/*
 * 创建了 ShapeDecorator 抽象类的实体类
 * */

class RedShapeDecorator extends ShapeDecorator{
    function __construct($decorateShape)
    {
        parent::__construct($decorateShape);
    }

    public function draw()
    {
        $this->decoratedShape->draw(); // TODO: Change the autogenerated stub
        $this->setRedBorder($this->decoratedShape);
    }
    public function setRedBorder($decorateShape){
        echo "Border Color : Red<br>";
    }
}


$circle = new Circle();

$redCircle = new RedShapeDecorator( new Circle());
$redRectangle = new RedShapeDecorator( new Rectangle());

echo "Circle with normal border<br>";
$circle->draw();

echo "<br>Circle of red border<br>";
$redCircle->draw();

echo "<br>Rectangle of red border<br>";
$redRectangle->draw();




